@model PierresTreats.Models.Treat

@{
	ViewData["Title"] = "Treat Details";
	ViewData["Footer"] = "Views / Treats / Details";
	Layout = "_Layout";
}

<h2 class="is-size-2 has-text-justified">Treat Details</h2>

<hr />

<nav class="breadcrumb" aria-label="breadcrumbs">
	<ul>
		<li><a href="/">Home</a></li>
		<li><a href="/Treats">Treats</a></li>
		<li class="is-active"><a href="/Flavors" aria-current="page">Treat Details</a></li>
	</ul>
</nav>

<h3>@Html.Label("Treat Name"):  @Html.DisplayFor(model => model.TreatName)</h3>
<h3>@Html.Label("Treat Description"):  @Html.DisplayFor(model => model.TreatDescription)</h3>

@if(@Model.JoinEntities.Count == 0)
{
	<p>This item does not belong to any categories</p>
}
else
{
	<h4>Flavor Categories:</h4>
	<ul>
		@foreach(var join in Model.JoinEntities)
		{
			<li>@join.Flavor.FlavorName</li>
			@using (Html.BeginForm("DeleteFlavor", "Treats"))
			{
				@Html.Hidden("joinId", @join.TreatFlavorId)
				<input class="button is-danger" type="submit" value="Remove Flavor"/>
			}
		}
	</ul>
}

<p>
  @Html.ActionLink("+ Add flavor", "Create", "Treats", null, new { @class = "button is-info" })
</p>

<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit Item", "Edit", new { id = Model.TreatId })</p>
<p>@Html.ActionLink("Delete Item", "Delete", new { id = Model.TreatId })</p>